<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<META http-equiv="Content-Style-Type" content="text/css">
<META name="GENERATOR" content="IBM WebSphere Studio Homepage Builder Version 8.0.2.0 for Windows">
<TITLE>帳票ＯＣＲソフトウェア サンプルプログラムについて</TITLE>
</HEAD>
<BODY>
<H1>帳票ＯＣＲソフトウェア</H1>
<H2>サンプルプログラムについて</H2>
<HR>
<P>このフォルダには、開発環境ごとに以下のサンプルプログラム及びテスト用イメージが格納されています。</P>
<H2>VisualStudio 2015 (VS2015フォルダ) / VisualStudio 2013 (VS2013フォルダ) / VisualStudio 2012 (VS2012フォルダ)<BR>
VisualStudio 2010 (VS2010フォルダ) / VisualStudio 2008 (VS2008フォルダ)
</H2>
<TABLE border="1" cellpadding="3">
  <TBODY>
    <TR>
      <TD align="center" bgcolor="#eaeaea"><B>開発環境</B></TD>
      <TD align="center" bgcolor="#eaeaea"><B>ファイル名</B></TD>
      <TD align="center" bgcolor="#eaeaea"><B>内容</B></TD>
    </TR>
    <TR>
      <TD rowspan="4" nowrap><B>VisualC#</B></TD>
      <TD nowrap><B>CSharp Sample1</B></TD>
      <TD>基本的な帳票ＯＣＲの処理を行う一連動作のサンプルです。</TD>
    </TR>
    <TR>
      <TD nowrap><B>CSharp Sample2</B></TD>
      <TD>認識結果から得られる情報を生かしたベリファイ機能の実装例です。<BR>
各種メソッド・プロパティの使用例が数多く含まれています。<BR>
      詳細については、同梱の&quot;ベリファイサンプルプログラム.pdf&quot;を参照してください。</TD>
    </TR>
    <TR>
      <TD nowrap><B>CSharp Sample3</B></TD>
      <TD>エリアＯＣＲ機能のサンプルプログラムです。</TD>
    </TR>
    <TR>
      <TD nowrap><B>ResultForCSharp</B></TD>
      <TD>認識エンジンの各ＡＰＩの出力結果を展開してアクセスを容易にする、サンプルクラス集です。</TD>
    </TR>
    <TR>
      <TD rowspan="4" nowrap><B>VisualBasic</B></TD>
      <TD nowrap><B>VB Sample1</B></TD>
      <TD>基本的な帳票ＯＣＲの処理を行う一連動作のサンプルです。</TD>
    </TR>
    <TR>
      <TD nowrap><B>VB Sample2</B></TD>
      <TD>認識結果から得られる情報を生かしたベリファイ機能の実装例です。<BR>
各種メソッド・プロパティの使用例が数多く含まれています。<BR>
      詳細については、同梱の&quot;ベリファイサンプルプログラム.pdf&quot;を参照してください。</TD>
    </TR>
    <TR>
      <TD nowrap><B>VB Sample3</B></TD>
      <TD>エリアＯＣＲ機能のサンプルプログラムです。</TD>
    </TR>
    <TR>
      <TD nowrap><B>ResultForVB</B></TD>
      <TD>認識エンジンの各ＡＰＩの出力結果を展開してアクセスを容易にする、サンプルクラス集です。</TD>
    </TR>
    <TR>
      <TD nowrap rowspan="2"><B>VisualC++</B></TD>
      <TD nowrap><B>VC12 Sample1<BR>VC11 Sample1<BR>VC10 Sample1<BR>VC9 Sample1<BR>VC8 Sample1</B></TD>
      <TD>基本的な帳票ＯＣＲの処理を行う一連動作のサンプルです。<BR>
      （ライブラリの組み込みに「TypeLibクラスの追加ウィザード」を使用しています。）</TD>
    </TR>
    <TR>
      <TD nowrap><B>VC12 Sample2<BR>VC11 Sample2<BR>VC10 Sample2<BR>VC9 Sample2<BR>VC8 Sample2</B></TD>
      <TD>エリアＯＣＲ機能のサンプルプログラムです。<BR>
      （ライブラリの組み込みに「#importディレクティブ」を使用しています。）</TD>
    </TR>
  </TBODY>
</TABLE>
<P><BR>
</P>
<P><BR>
</P>
<H2>テストイメージ (テストイメージ フォルダ)</H2>
<TABLE border="1" cellpadding="3">
  <TBODY>
    <TR>
      <TD align="center" colspan="2" bgcolor="#eaeaea"><B>開発環境</B></TD>
      <TD align="center" bgcolor="#eaeaea"><B>ファイル名</B></TD>
      <TD align="center" bgcolor="#eaeaea"><B>内容</B></TD>
    </TR>
    <TR>
      <TD nowrap colspan="2">各開発環境共通</TD>
      <TD nowrap>入会申込書（記入済み）.jpg<BR>
      field1.jpg<BR>
      field2.jpg<BR>
      field3.jpg</TD>
      <TD>各サンプルで使用するテスト用イメージが格納されています。</TD>
    </TR>
  </TBODY>
</TABLE>
<P><BR>
</P>
<TABLE cellpadding="10">
  <TBODY>
    <TR>
      <TD valign="top">※２</TD>
      <TD>各サンプルでは使用するプロジェクトやイメージファイルの格納場所が固定されています。<BR>
      ソースコードを無修正で実行する場合、<BR>
　　① 	ＯＣＲエンジン及びサンプルプロジェクトがデフォルトのインストールパス<BR>
      　　　 &quot;C:\Program Files\GLORY\GLYOCR4&quot; <BR>
　　　　にインストールされていること<BR>
　　②　&quot;テストイメージ&quot; フォルダが C:\以下にコピーされていること<BR>
      が前提となります。</TD>
    </TR>
    <TR>
      <TD valign="top">※３</TD>
      <TD>　アプリケーションの開発にあたっては、<BR>
　　<B>「取扱説明書」</B><BR>
　及び、<BR>
　　<B>「補足マニュアル」</B><BR>
　をあわせて参照願います。</TD>
    </TR>
    <TR>
      <TD valign="top">※４</TD>
      <TD>64ビット版OSの場合は、デフォルトのインストールパスが<BR>
      　　　 &quot;C:\Program Files (x86)\GLORY\GLYOCR4&quot; <BR>
になります。<BR>
また、WOW64上で動作するようにプラットフォームを x86 にしてください。</TD>
    </TR>
  </TBODY>
</TABLE>
<P><BR>
</P>
<HR>
<H2>出力結果 展開クラスについて</H2>
<P>本認識エンジンでは、いくつかのＡＰＩの入出力にVARIANT型を使用していますが、.ＮＥＴ開発環境下(Visual
C#.、Visual Basic）では、直接取り扱うことが難しくなっています。<BR>
これらについては、サンプルとして収録している以下の各クラスを使用することにより、容易にアクセスして頂くことができます。</P>
<TABLE border="1" cellpadding="3">
  <CAPTION align="left"><B>収録クラス一覧</B></CAPTION>
  <TBODY>
    <TR>
      <TD bgcolor="#eaeaea"><B>クラス名</B></TD>
      <TD bgcolor="#eaeaea"><B>内容</B></TD>
      <TD colspan="2" bgcolor="#eaeaea"><B>対応するＡＰＩ</B></TD>
      <TD bgcolor="#eaeaea"><B>備考</B></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>DocumentInfo</B></TD>
      <TD>１帳票分の情報</TD>
      <TD>2-11</TD>
      <TD>DocumentListEx</TD>
      <TD></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>DocumentListEx</B></TD>
      <TD>帳票情報リスト</TD>
      <TD>2-11</TD>
      <TD>DocumentListEx</TD>
      <TD></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>Result</B></TD>
      <TD>１帳票分の内容</TD>
      <TD>2-13<BR>
      5-12</TD>
      <TD>ParameterInfo<BR>
      Result</TD>
      <TD></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>DocumentResult</B></TD>
      <TD>１帳票分の内容</TD>
      <TD>5-16</TD>
      <TD>DocumentResult</TD>
      <TD></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>DocumentResultEx</B></TD>
      <TD>１帳票分の内容</TD>
      <TD>2-14<BR>
      5-17</TD>
      <TD>ParameterInfoEx<BR>
      DocumentResultEx</TD>
      <TD></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>FieldForResult</B></TD>
      <TD>１フィールド分の内容</TD>
      <TD>2-13<BR>
      5-12</TD>
      <TD>ParameterInfo<BR>
      Result</TD>
      <TD>バリアント配列Ａ</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>FieldForDocResult</B></TD>
      <TD>１フィールド分の内容</TD>
      <TD>5-16</TD>
      <TD>DocumentResult</TD>
      <TD>バリアント配列Ｂ</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>FieldForDocResultEx</B></TD>
      <TD>１フィールド分の内容</TD>
      <TD>2-14<BR>
      5-17</TD>
      <TD>ParameterInfoEx<BR>
      DocumentResultEx</TD>
      <TD>バリアント配列Ｃ</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>FieldForResultEx</B></TD>
      <TD>１フィールド分の内容</TD>
      <TD>5-20<BR>
      8-1<BR>
      8-2</TD>
      <TD>GetFieldResultEx<BR>
      RecogField<BR>
      RecogFieldEx</TD>
      <TD>バリアント配列Ｄ</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>CandidateForDocResultEx</B></TD>
      <TD>候補文字列</TD>
      <TD>2-14<BR>
      5-17</TD>
      <TD>ParameterInfoEx<BR>
      DocumentResultEx</TD>
      <TD>バリアント配列１</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>CharacterInfo</B></TD>
      <TD>１文字分の情報</TD>
      <TD>2-14<BR>
      5-17<BR>
      5-20<BR>
      5-21</TD>
      <TD>ParameterInfoEx<BR>
      DocumentResultEx<BR>
      GetFieldResultEx<BR>
      GetFieldCharResult</TD>
      <TD>バリアント配列２</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>CandidateForFieldResultEx</B></TD>
      <TD>候補文字列</TD>
      <TD>5-20<BR>
      5-21</TD>
      <TD>GetFieldResultEx<BR>
      GetFieldCharResult</TD>
      <TD>バリアント配列３</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>FieldRects</B></TD>
      <TD>読み取り領域</TD>
      <TD>5-23<BR>
      5-24<BR>
      5-25</TD>
      <TD>GetDocumentImage<BR>
      GetDocumentImageFn<BR>
      GetDocumentImageP</TD>
      <TD></TD>
    </TR>
  </TBODY>
</TABLE>
<P></P>
<TABLE border="1" cellpadding="3">
  <CAPTION align="left"><B>ＡＰＩとクラスの対応一覧</B></CAPTION>
  <TBODY>
    <TR>
      <TD colspan="2" bgcolor="#eaeaea"><B>使用するAPI</B></TD>
      <TD bgcolor="#eaeaea"><B>出力を受け取るクラス</B></TD>
      <TD bgcolor="#eaeaea"><B>依存するクラス</B></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>2-11</B></TD>
      <TD bgcolor="#bff4f3"><B>DocumentListEx</B></TD>
      <TD><B>DocumentListEx</B></TD>
      <TD>DocumentInfo</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>2-13</B></TD>
      <TD bgcolor="#bff4f3"><B>ParameterInfo</B></TD>
      <TD><B>Result</B></TD>
      <TD>FieldForResult</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>2-14</B></TD>
      <TD bgcolor="#bff4f3"><B>ParameterInfoEx</B></TD>
      <TD><B>DocumentResultEx</B></TD>
      <TD>DocumentResultEx<BR>
      FieldForDocResultEx<BR>
      CandidateForDocResultEx<BR>
      CharacterInfo</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>5-12</B></TD>
      <TD bgcolor="#bff4f3"><B>Result</B></TD>
      <TD><B>Result</B></TD>
      <TD>FieldForResult</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>5-16</B></TD>
      <TD bgcolor="#bff4f3"><B>DocumentResult</B></TD>
      <TD><B>DocumentResult</B></TD>
      <TD>FieldForDocResult</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>5-17</B></TD>
      <TD bgcolor="#bff4f3"><B>DocumentResultEx</B></TD>
      <TD><B>DocumentResultEx</B></TD>
      <TD>FieldForDocResultEx<BR>
      CandidateForDocResultEx<BR>
      CharacterInfo</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>5-20</B></TD>
      <TD bgcolor="#bff4f3"><B>GetFieldResultEx</B></TD>
      <TD><B>FieldForResultEx</B></TD>
      <TD>CandidateForFieldResultEx<B><BR>
      </B>CharacterInfo</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>5-21</B></TD>
      <TD bgcolor="#bff4f3"><B>GetFieldCharResult</B></TD>
      <TD><B>CandidateForFieldResultEx</B></TD>
      <TD>CharacterInfo</TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>5-23</B><B><BR>
      </B><B>5-24</B><B><BR>
      </B><B>5-25</B></TD>
      <TD bgcolor="#bff4f3"><B>GetDocumentImage</B><B><BR>
      </B><B>GetDocumentImageFn</B><B><BR>
      </B><B>GetDocumentImageP</B></TD>
      <TD><B>FieldRects</B></TD>
      <TD></TD>
    </TR>
    <TR>
      <TD bgcolor="#bff4f3"><B>8-1</B><B><BR>
      </B><B>8-2</B></TD>
      <TD bgcolor="#bff4f3"><B>RecogField</B><B><BR>
      </B><B>RecogFieldEx</B></TD>
      <TD><B>FieldForResultEx</B></TD>
      <TD>CandidateForFieldResultEx<B><BR>
      </B>CharacterInfo</TD>
    </TR>
  </TBODY>
</TABLE>
<P><BR>
</P>
<H3>クラスの使用例（C#）　帳票ＯＣＲの結果を取得して帳票名を表示</H3>
<TABLE border="1" bgcolor="#d9f0fd" cellpadding="10">
  <TBODY>
    <TR>
      <TD>
      <PRE><B>// ネームスペースの宣言
using ResultForCSharp;
</B>          ：
          ：
// 帳票ＯＣＲ実行
ret = gloryOcrObj.RecogDocumentFn(ref ocrID, ocrImagePath);
if(ret == 1)
{
    <B>// VARIANTの代わりにobjectで結果を受け取る
</B>    object result = gloryOcrObj.Result;
    <B>// 結果が空かどうかをチェック</B>
    if(result != null)
    {
        <B>// 受け取ったobjectを元に、Resultオブジェクトを生成
</B>        Result doc = new Result(result);
<B>       // Resultの各メンバにアクセスして値を取得</B>
        MessageBox.Show(doc.DocName);
    }
}
　　　　　：
　　　　　：</PRE>
      </TD>
    </TR>
  </TBODY>
</TABLE>
<H3>クラスの使用例（Visual Basic）　帳票ＯＣＲの結果を取得して帳票名を表示</H3>
<TABLE border="1" bgcolor="#d9f0fd" cellpadding="10">
  <TBODY>
    <TR>
      <TD>
      <PRE><B>' ネームスペースの宣言
Imports ResultForVB
</B>          ：
　　　　　：
' 帳票ＯＣＲ実行
ret = gloryOcrObj.RecogDocumentFn(ocrID, ocrImagePath)
If ret = 1 Then
    <B>' VARIANTの代わりにObjectで結果を受け取る</B>
    Dim result As Object = gloryOcrObj.Result
    <B>' 結果が空かどうかをチェック</B>
    If Not (result Is Nothing) Then
        <B>' 受け取ったObjectを元に、Resultオブジェクトを生成
</B>        Dim doc As New Result(result)
<B>       ' Resultの各メンバにアクセスして値を取得</B>
        MessageBox.Show(doc.DocName)
    End If
End If
          ：
　　　　　：</PRE>
      </TD>
    </TR>
  </TBODY>
</TABLE>
<P><BR>
</P>
<TABLE cellpadding="10">
  <TBODY>
    <TR>
      <TD valign="top">※１</TD>
      <TD>各クラス集はソースコード（ソリューション）の形で提供されます。<BR>
（ビルド済みのDLLファイルは含まれていません。）</TD>
    </TR>
    <TR>
      <TD valign="top">※２</TD>
      <TD>これらのサンプルクラスは、出力のハンドリングの一例です。<BR>
詳細については、各サンプルクラスのソースコードを参照願います。</TD>
    </TR>
  </TBODY>
</TABLE>
</BODY>
</HTML>