{
  "custom_commands": {
    "analyze_ocr_image": {
      "description": "OCR対象画像を分析して最適な前処理方法を提案（マルチAI連携）",
      "command": "echo 'Starting multi-AI image analysis...' && echo.",
      "followup_prompts": [
        "画像パス「{image_path}」のOCR前処理分析を開始します。",
        "Gemini CLI: この画像の品質特性（明度、コントラスト、ノイズレベル、文字の鮮明度など）を分析してください。",
        "o3 MCP: 検出された品質問題に対する最適な画像処理アルゴリズムを提案してください。",
        "分析結果に基づいて、PreprocessingOptionsの最適なパラメータを生成します。"
      ]
    },
    
    "implement_custom_preprocessing": {
      "description": "プロジェクト固有の前処理パターンを実装（マルチAI設計）",
      "command": "echo 'Implementing custom preprocessing pattern...' && echo.",
      "followup_prompts": [
        "プロジェクト「{project_name}」用のカスタム前処理パターンを実装します。",
        "対象文書の特徴：{document_characteristics}",
        "Gemini CLI: この文書タイプに最適な前処理フローを設計してください。",
        "o3 MCP: 提案されたフローを実現する具体的なアルゴリズムと実装方法を提示してください。",
        "samples/CustomPreprocessor_{project_name}.cs を生成します。"
      ]
    },
    
    "test_preprocessing_quality": {
      "description": "前処理結果の品質をマルチAIで評価",
      "command": "cd samples && dir *.cs && echo.",
      "followup_prompts": [
        "前処理済み画像の品質評価を実行します。",
        "元画像：{original_image}",
        "処理済み画像：{processed_image}",
        "Gemini CLI: OCR認識に適した画像になっているか評価してください（スコア化）。",
        "o3 MCP: 品質が不十分な領域を特定し、追加処理の必要性を判断してください。",
        "評価レポートを生成します。"
      ]
    },
    
    "optimize_preprocessing_params": {
      "description": "前処理パラメータをマルチAIで最適化",
      "command": "echo 'Optimizing preprocessing parameters...' && echo.",
      "followup_prompts": [
        "画像セット「{image_set_path}」に対する最適なパラメータを探索します。",
        "現在のパラメータ：{current_params}",
        "Gemini CLI: パラメータの組み合わせによる効果を分析してください。",
        "o3 MCP: ベイズ最適化やグリッドサーチによる最適パラメータ探索戦略を提案してください。",
        "最適化されたPreprocessingOptionsを生成します。"
      ]
    },
    
    "create_preprocessing_preset": {
      "description": "文書タイプ別の前処理プリセットを作成",
      "command": "echo 'Creating preprocessing preset...' && type samples\\ImagePreprocessor.cs | findstr /C:\"PreprocessingOptions\" && echo.",
      "followup_prompts": [
        "文書タイプ「{document_type}」用のプリセットを作成します。",
        "サンプル画像：{sample_images}",
        "Gemini CLI: このタイプの文書に共通する品質問題を特定してください。",
        "o3 MCP: 特定された問題に対する最適な前処理パラメータセットを設計してください。",
        "PreprocessingOptions.For{document_type} を実装します。"
      ]
    },
    
    "benchmark_preprocessing": {
      "description": "前処理性能をベンチマーク（処理速度・品質）",
      "command": "echo 'Running preprocessing benchmark...' && echo.",
      "followup_prompts": [
        "前処理アルゴリズムのベンチマークを実行します。",
        "テスト画像セット：{test_images}",
        "評価項目：処理速度、メモリ使用量、OCR認識精度",
        "Gemini CLI: ベンチマーク結果を分析し、ボトルネックを特定してください。",
        "o3 MCP: パフォーマンス改善のための最適化手法を提案してください。",
        "ベンチマークレポートを生成します。"
      ]
    },
    
    "implement_gpu_acceleration": {
      "description": "GPU加速による前処理の高速化実装",
      "command": "echo 'Implementing GPU acceleration...' && echo.",
      "followup_prompts": [
        "GPU加速を使用した前処理の実装を開始します。",
        "対象アルゴリズム：{target_algorithms}",
        "Gemini CLI: GPU並列化に適したアルゴリズムを選定してください。",
        "o3 MCP: OpenCL/CUDA実装の設計とカーネル最適化方法を提示してください。",
        "samples/GPUAcceleratedPreprocessor.cs を生成します。"
      ]
    },
    
    "analyze_ocr_results": {
      "description": "OCR結果を分析して前処理の改善点を特定",
      "command": "echo 'Analyzing OCR results...' && echo.",
      "followup_prompts": [
        "OCR認識結果の分析を開始します。",
        "認識結果：{ocr_results}",
        "期待される結果：{expected_results}",
        "Gemini CLI: 認識エラーのパターンを分析し、原因を特定してください。",
        "o3 MCP: エラーパターンに基づいて前処理の改善方法を提案してください。",
        "改善された前処理オプションを生成します。"
      ]
    },
    
    "create_preprocessing_pipeline": {
      "description": "複数の前処理を組み合わせたパイプラインを構築",
      "command": "type samples\\AdvancedImagePreprocessor.cs | findstr /C:\"Pipeline\" && echo.",
      "followup_prompts": [
        "前処理パイプライン「{pipeline_name}」を構築します。",
        "処理ステージ：{processing_stages}",
        "Gemini CLI: 各ステージの最適な実行順序を決定してください。",
        "o3 MCP: ステージ間のデータフローと条件分岐の設計を提示してください。",
        "samples/PreprocessingPipeline_{pipeline_name}.cs を生成します。"
      ]
    },
    
    "train_ml_preprocessor": {
      "description": "機械学習ベースの前処理パラメータ予測モデルを訓練",
      "command": "echo 'Training ML-based preprocessor...' && echo.",
      "followup_prompts": [
        "機械学習モデルの訓練を開始します。",
        "訓練データ：{training_data}",
        "目標：画像特徴から最適な前処理パラメータを予測",
        "Gemini CLI: 特徴量エンジニアリングと適切なモデルアーキテクチャを提案してください。",
        "o3 MCP: モデルの実装と訓練プロセスを設計してください。",
        "samples/MLPreprocessingPredictor.cs を生成します。"
      ]
    },
    
    "integrate_preprocessing_ui": {
      "description": "前処理UIコンポーネントをアプリケーションに統合",
      "command": "type samples\\ImagePreprocessingForm.cs | findstr /C:\"InitializeComponent\" && echo.",
      "followup_prompts": [
        "前処理UIの統合を開始します。",
        "統合先フォーム：{target_form}",
        "必要な機能：{required_features}",
        "Gemini CLI: ユーザビリティを考慮したUI設計を提案してください。",
        "o3 MCP: MVVMパターンでの実装方法を提示してください。",
        "UI統合コードを生成します。"
      ]
    },
    
    "export_preprocessing_config": {
      "description": "前処理設定をエクスポート/インポート可能な形式に変換",
      "command": "echo 'Exporting preprocessing configuration...' && echo.",
      "followup_prompts": [
        "前処理設定のエクスポート機能を実装します。",
        "エクスポート形式：{export_format} (JSON/XML/YAML)",
        "Gemini CLI: 設定の構造化と検証ルールを設計してください。",
        "o3 MCP: シリアライゼーション/デシリアライゼーションの実装を提示してください。",
        "samples/PreprocessingConfigManager.cs を生成します。"
      ]
    },
    
    "debug_preprocessing": {
      "description": "前処理のデバッグとトラブルシューティング",
      "command": "echo 'Starting preprocessing debugger...' && echo.",
      "followup_prompts": [
        "前処理のデバッグを開始します。",
        "問題のある画像：{problem_image}",
        "エラー内容：{error_description}",
        "Gemini CLI: 問題の原因を特定するためのデバッグ戦略を提案してください。",
        "o3 MCP: ステップバイステップのデバッグコードと診断ツールを実装してください。",
        "デバッグレポートを生成します。"
      ]
    },
    
    "compare_preprocessing_methods": {
      "description": "複数の前処理手法を比較評価",
      "command": "echo 'Comparing preprocessing methods...' && echo.",
      "followup_prompts": [
        "前処理手法の比較評価を実行します。",
        "比較対象：{method_list}",
        "評価基準：{evaluation_criteria}",
        "Gemini CLI: 各手法の長所・短所を分析してください。",
        "o3 MCP: 統計的有意性を含む比較評価の実装を提示してください。",
        "比較レポートを生成します。"
      ]
    },
    
    "generate_preprocessing_docs": {
      "description": "プロジェクト固有の前処理ドキュメントを生成",
      "command": "cd docs && dir *.md | findstr preprocessing && echo.",
      "followup_prompts": [
        "プロジェクト「{project_name}」の前処理ドキュメントを生成します。",
        "ドキュメント内容：実装詳細、使用方法、パラメータ説明",
        "Gemini CLI: ドキュメントの構成と必要な説明項目を設計してください。",
        "o3 MCP: コード例とベストプラクティスを含む詳細なドキュメントを作成してください。",
        "docs/{project_name}_preprocessing_guide.md を生成します。"
      ]
    }
  },
  
  "spec": {
    "description": "統合OCR開発フロー管理",
    "command": "echo 'Starting ISP-673 OCR development flow...' && echo.",
    "followup_prompts": [
      "ISP-673 OCR統合開発フローを開始します。",
      "1. OCR要件定義と仕様策定",
      "2. 開発環境セットアップ",
      "3. インターフェース実装",
      "4. テストとデバッグ",
      "5. デプロイメント準備"
    ]
  },
  
  "ocr_setup": {
    "description": "ISP-673 OCR環境セットアップ",
    "command": "echo 'Setting up ISP-673 OCR environment...' && echo.",
    "followup_prompts": [
      "ISP-673 OCR開発環境をセットアップします。",
      "GloryOcrMain4.dllの存在確認",
      "COM参照の設定",
      "x86プラットフォーム設定の確認",
      "必要なNuGetパッケージのインストール"
    ]
  },
  
  "ocr_interface": {
    "description": "OCRインターフェース実装支援",
    "command": "echo 'Implementing OCR interfaces...' && echo.",
    "followup_prompts": [
      "IGlyOcr/IGlyOcrExインターフェースの実装を支援します。",
      "標準帳票OCR（IGlyOcr）の実装",
      "エリアOCR（IGlyOcrEx）の実装",
      "画像処理機能の統合"
    ]
  },
  
  "form_recognition": {
    "description": "帳票認識機能実装",
    "command": "echo 'Implementing form recognition...' && echo.",
    "followup_prompts": [
      "帳票種類自動判別機能を実装します。",
      "帳票判別辞書の活用",
      "グループ処理の実装",
      "認識結果の処理"
    ]
  },
  
  "area_ocr": {
    "description": "エリアOCR機能実装",
    "command": "echo 'Implementing area OCR...' && echo.",
    "followup_prompts": [
      "任意領域のOCR機能を実装します。",
      "RPFファイルの活用",
      "座標指定認識の実装",
      "複数エリアの一括処理"
    ]
  },
  
  "barcode_recognition": {
    "description": "バーコード認識実装",
    "command": "echo 'Implementing barcode recognition...' && echo.",
    "followup_prompts": [
      "バーコード認識機能を実装します。",
      "対応バーコード種別の確認",
      "認識パラメータの設定",
      "認識結果の検証"
    ]
  },
  
  "com_integration": {
    "description": "COM DLL統合サポート",
    "command": "echo 'Integrating COM DLL...' && echo.",
    "followup_prompts": [
      "GloryOcrMain4.dll COM統合をサポートします。",
      "COM参照の正しい設定方法",
      "メモリ管理（GlobalFree）の実装",
      "エラーハンドリングの実装"
    ]
  },
  
  "x86_build": {
    "description": "x86プラットフォーム最適化",
    "command": "echo 'Optimizing for x86 platform...' && echo.",
    "followup_prompts": [
      "x86プラットフォーム設定を最適化します。",
      "プロジェクト設定の確認",
      "依存関係の検証",
      "64bit環境でのWOW64動作確認"
    ]
  },
  
  "ocr_testing": {
    "description": "OCR機能テスト支援",
    "command": "echo 'Testing OCR functions...' && echo.",
    "followup_prompts": [
      "OCR機能の包括的なテストを支援します。",
      "単体テストの作成",
      "統合テストの実装",
      "認識精度の測定"
    ]
  },
  
  "legacy_integration": {
    "description": "レガシーシステム統合",
    "command": "echo 'Integrating with legacy systems...' && echo.",
    "followup_prompts": [
      "Windows XP/2003環境との統合を支援します。",
      "互換性チェックの実装",
      "レガシーAPIの活用",
      "デプロイメント戦略"
    ]
  },
  
  "performance_tuning": {
    "description": "OCR性能最適化",
    "command": "echo 'Tuning OCR performance...' && echo.",
    "followup_prompts": [
      "OCR処理性能を最適化します。",
      "処理時間の測定と分析",
      "メモリ使用量の最適化",
      "並列処理の検討（制限事項考慮）"
    ]
  },
  
  "error_handling": {
    "description": "OCRエラーハンドリング",
    "command": "echo 'Implementing error handling...' && echo.",
    "followup_prompts": [
      "包括的なエラーハンドリングを実装します。",
      "COM例外の処理",
      "リトライ機構の実装",
      "エラーログの記録"
    ]
  },
  
  "memory_management": {
    "description": "OCRメモリ管理",
    "command": "echo 'Managing OCR memory...' && echo.",
    "followup_prompts": [
      "OCR処理のメモリ管理を最適化します。",
      "GlobalFreeの適切な使用",
      "画像バッファの管理",
      "メモリリークの防止"
    ]
  },
  
  "deployment_ocr": {
    "description": "OCR環境デプロイメント",
    "command": "echo 'Deploying OCR environment...' && echo.",
    "followup_prompts": [
      "OCRアプリケーションのデプロイメントを準備します。",
      "MSIインストーラーの作成",
      "ClickOnce配布の設定",
      "必要なランタイムの確認"
    ]
  },
  
  "research": {
    "description": "OCR市場分析・ユーザー調査（Gemini CLI）",
    "command": "echo 'Starting OCR market research with Gemini CLI...' && echo.",
    "followup_prompts": [
      "Gemini CLI: OCR市場の分析を開始します。",
      "帳票OCR市場の動向分析",
      "競合製品の調査",
      "ユーザーニーズの特定"
    ]
  },
  
  "ocr_ux_strategy": {
    "description": "OCR UI/UX戦略（Gemini CLI）",
    "command": "echo 'Developing OCR UX strategy with Gemini CLI...' && echo.",
    "followup_prompts": [
      "Gemini CLI: OCR UI/UX戦略を策定します。",
      "ユーザーペルソナの定義",
      "UIデザイン方針の決定",
      "ユーザビリティ改善案"
    ]
  },
  
  "product_plan": {
    "description": "OCRロードマップ策定（Gemini CLI）",
    "command": "echo 'Creating OCR product roadmap with Gemini CLI...' && echo.",
    "followup_prompts": [
      "Gemini CLI: OCR製品ロードマップを策定します。",
      "機能開発優先順位",
      "リリース計画",
      "市場投入戦略"
    ]
  },
  
  "ocr_architecture": {
    "description": "OCRシステムアーキテクチャ設計（o3 MCP）",
    "command": "echo 'Designing OCR architecture with o3 MCP...' && echo.",
    "followup_prompts": [
      "o3 MCP: OCRシステムアーキテクチャを設計します。",
      "システム全体構成",
      "モジュール設計",
      "レガシー統合アーキテクチャ"
    ]
  },
  
  "ocr_security": {
    "description": "OCRセキュリティ設計（o3 MCP）",
    "command": "echo 'Designing OCR security with o3 MCP...' && echo.",
    "followup_prompts": [
      "o3 MCP: OCRセキュリティを設計します。",
      "画像データ暗号化",
      "認識結果の保護",
      "監査ログの実装"
    ]
  },
  
  "ocr_devops": {
    "description": "OCR CI/CD・デプロイ自動化（o3 MCP）",
    "command": "echo 'Setting up OCR DevOps with o3 MCP...' && echo.",
    "followup_prompts": [
      "o3 MCP: OCR CI/CDパイプラインを構築します。",
      "ビルド自動化",
      "テスト自動化",
      "デプロイメント自動化"
    ]
  }
}